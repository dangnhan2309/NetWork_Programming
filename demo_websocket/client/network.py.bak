import asyncio
import websockets
from shared.protocol import Protocol

class ChatClient:
    def __init__(self, uri="ws://localhost:8765", name="Thuy"):
        self.uri = uri
        self.name = name

    async def run(self):
        async with websockets.connect(self.uri) as websocket:
            await asyncio.gather(
                self.send_message(websocket),
                self.receive_message(websocket)
            )

    async def send_message(self, websocket):
        while True:
            msg = await asyncio.to_thread(input, f"{self.name}: ")
            packet = Protocol.make_packet("CHAT", {"msg": msg})
            await websocket.send(packet)

    async def receive_message(self, websocket):
        async for message in websocket:
            packet = Protocol.parse_packet(message)
            msg = packet["data"]["msg"]

            print(f"\n[Người khác] {msg}")
            print(f"{self.name}: ", end="", flush=True)

from typing import Dict, TYPE_CHECKING
from .Bank import Bank
# Import PacketBuilder t·ª´ v·ªã tr√≠ ƒë√£ ƒë·ªãnh nghƒ©a c·ªßa b·∫°n
from ..network.packet_builder import PacketBuilder


if TYPE_CHECKING:
    from .tiles.property_tile import PropertyTile
class Player:
    """
    ƒê·∫°i di·ªán cho m·ªôt ng∆∞·ªùi ch∆°i trong Monopoly.
    """

    def __init__(self, player_id: str, name: str, bank_service: Bank, room_id: str, initial_balance: int = 1500):
        self.id = player_id
        self.name = name
        self.position = 0
        self.in_jail = False
        self.jail_turns = 0
        self.is_bankrupt = False
        self.has_rolled_and_moved = False
        self.consecutive_doubles = 0
        self.room_id = room_id

        # üîë SOURCE OF TRUTH: Set ch·ª©a ID c·ªßa c√°c √¥ ƒë·∫•t ng∆∞·ªùi ch∆°i s·ªü h·ªØu

        self.bank = bank_service
        self.bank.register_player(self, initial_balance)

        # üí• Th√™m PacketBuilder ƒë·ªÉ t·∫°o JSON packet h√†nh ƒë·ªông
        # L∆∞u √Ω: PacketBuilder n√™n l√† static ho·∫∑c ƒë∆∞·ª£c truy·ªÅn v√†o
        # T√¥i s·∫Ω ƒë·ªÉ n√≥ l√† instance t·∫°m th·ªùi, nh∆∞ng d√πng @classmethod cho c√°c h√†m l√† t·ªët nh·∫•t.
        self.packet_builder = PacketBuilder()

    # ======================================================
    # üí∞ TI·ªÄN V√Ä GIAO D·ªäCH
    # ======================================================
    @property
    def balance(self) -> int:
        """L·∫•y s·ªë d∆∞ t·ª´ Bank."""
        return self.bank.get_balance(self)




    # ======================================================
    # üè† T√ÄI S·∫¢N (D√πng self.owned_tiles)
    # ======================================================

    # ======================================================
    # SERIALIZATION
    # ======================================================
    def serialize(self) -> Dict:
        """Chu·∫©n h√≥a d·ªØ li·ªáu ng∆∞·ªùi ch∆°i ƒë·ªÉ g·ª≠i qua m·∫°ng ho·∫∑c l∆∞u tr·ªØ."""
        return {
            "id": self.id,
            "name": self.name,
            "position": self.position,
            "balance": self.balance,
            "owned_tiles": list(self.owned_tiles),  # Convert Set to List ƒë·ªÉ JSON h√≥a
            "in_jail": self.in_jail,
            "jail_turns": self.jail_turns,
            "is_bankrupt": self.is_bankrupt
        }

    def __repr__(self):
        return f"<Player {self.name} (${self.balance}) pos={self.position}>"
